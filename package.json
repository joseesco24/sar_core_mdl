{
	"name": "sar_core_mdl",
	"version": "v3.4.0",
	"description": "The SAR Core Modulith is the incharge of provide some of the most important capabilities of the SAR system, as wastes collect request management, waste management and clients management",
	"author": {
		"email": "josed.escobar@outlook.com",
		"name": "joseesco24"
	},
	"readme": "readme.md",
	"scripts": {
		"export-dependencies": "poetry export --without-hashes --only dev --format=requirements.txt > ./requirements/dev.txt && poetry export --without-hashes --format=requirements.txt > ./requirements/app.txt",
		"lint": "ruff check && printf \"\n\" && mypy --explicit-package-bases ./src && printf \"\n\" && mypy --explicit-package-bases ./test/unit_test",
		"clean-cache": "find . | grep -E \"(/__pycache__$|\\.pyc$|\\.pyo$)\" | xargs rm -rf && rm -rf .mypy_cache .pytest_cache .ruff_cache",
		"docker-dependencies-stop": "docker compose -f ./infra/docker_compose/deploy/dependencies.yaml down",
		"docker-dependencies-start": "docker compose -f ./infra/docker_compose/deploy/dependencies.yaml up",
		"docker-image-build": "cp -f ./envs/production.env .env && docker compose -f ./infra/docker_compose/image/build.yaml build",
		"docker-image-push": "docker push ghcr.io/joseesco24/sar_core_mdl --all-tags",
		"docker-stop": "docker compose -f ./docker-compose.yaml down",
		"docker-start": "docker compose -f ./docker-compose.yaml up",
		"docker-full-stop": "docker compose -f ./infra/docker_compose/deploy/full.yaml down",
		"docker-full-start": "cp -f ./envs/docker.env .env && docker compose -f ./infra/docker_compose/deploy/full.yaml up",
		"format": "ruff format && printf \"\n\" && prettier \"./test/load_test/k6/**/*.js\" --write && printf \"\n\" && prettier \"./**/*.{yaml,json,md,graphql,sh,env,gitignore,prettierignore,feature}\" --write && printf \"\n\" && prettier \"./**/*Dockerfile\" --write",
		"start-dev": "cp -f ./envs/development.env .env && python src/sar_core_mdl.py",
		"start-app": "cp -f ./envs/production.env .env && python src/sar_core_mdl.py",
		"commitmsg": "bash ./.husky/commit-msg.sh",
		"precommit": "bash ./.husky/pre-commit.sh",
		"postinstall": "npx husky install",
		"load-test": "bash ./test/load_test/k6/orchestator.sh",
		"unit-test": "pytest --verbose"
	},
	"prettier": {
		"plugins": [
			"prettier-plugin-gherkin",
			"prettier-plugin-sh"
		],
		"trailingComma": "es5",
		"useTabs": true,
		"semi": false,
		"singleQuote": false,
		"proseWrap": "preserve",
		"quoteProps": "consistent",
		"bracketSpacing": false,
		"bracketSameLine": false,
		"arrowParens": "always",
		"insertPragma": false,
		"endOfLine": "lf",
		"printWidth": 180,
		"rangeStart": 0
	},
	"devDependencies": {
		"@biomejs/biome": "1.7.0",
		"@commitlint/cli": "^19.2.2",
		"@commitlint/config-conventional": "^19.2.2",
		"@cucumber/cucumber": "^10.5.0",
		"cucumber": "^6.0.7",
		"husky": "^9.0.11",
		"prettier": "^3.2.5",
		"prettier-plugin-gherkin": "^2.2.1",
		"prettier-plugin-sh": "^0.14.0"
	}
}
