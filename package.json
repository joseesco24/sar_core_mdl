{
	"name": "sar_ms_py",
	"version": "v1.5.1",
	"description": "This repository corresponds to the a small python microservice that is gint to be used used in the sar system.",
	"author": {
		"email": "josed.escobar@outlook.com",
		"name": "joseesco24"
	},
	"readme": "readme.md",
	"scripts": {
		"export-dependencies": "poetry export --without-hashes --only dev --format=requirements.txt > ./requirements/dev.txt && poetry export --without-hashes --format=requirements.txt > ./requirements/app.txt",
		"clean-cache": "find . | grep -E \"(/__pycache__$|\\.pyc$|\\.pyo$)\" | xargs rm -rf && rm -r .mypy_cache .pytest_cache",
		"lint": "flake8 ./src --max-line-length=180 --verbose && mypy --explicit-package-bases ./src",
		"docker-dependencies-stop": "docker compose -f docker_compose/deploy.dependencies.yaml down",
		"docker-dependencies-start": "docker compose -f docker_compose/deploy.dependencies.yaml up",
		"docker-image-build": "docker compose -f docker_compose/image.build.yaml build",
		"docker-image-push": "docker push ghcr.io/joseesco24/sar_ms_py --all-tags",
		"docker-full-stop": "docker compose -f docker_compose/deploy.full.yaml down",
		"docker-full-start": "docker compose -f docker_compose/deploy.full.yaml up",
		"format": "black ./src --line-length=180 && black ./test --line-length=180",
		"start-dev": "cp -f ./env/development.env .env && python src/sar_ms_py.py",
		"start-app": "cp -f ./env/production.env .env && python src/sar_ms_py.py",
		"commitmsg": "bash hooks/commit-msg.sh",
		"precommit": "bash hooks/pre-commit.sh",
		"postinstall": "npx husky install",
		"test": "pytest --verbose"
	},
	"devDependencies": {
		"@commitlint/cli": "^18.6.1",
		"@commitlint/config-conventional": "^18.6.2",
		"husky": "^9.0.11"
	}
}