{
	"name": "sar_ms_py",
	"version": "v3.1.3",
	"description": "This repository corresponds to the a small python microservice that is going to be used used in the sar system.",
	"author": {
		"email": "josed.escobar@outlook.com",
		"name": "joseesco24"
	},
	"readme": "readme.md",
	"scripts": {
		"export-dependencies": "poetry export --without-hashes --only dev --format=requirements.txt > ./req/dev.txt && poetry export --without-hashes --format=requirements.txt > ./req/app.txt",
		"lint": "flake8 ./src --verbose && printf \"\n\" && mypy --explicit-package-bases ./src && printf \"\n\" && flake8 ./test/unit_test --verbose && printf \"\n\" && mypy --explicit-package-bases ./test/unit_test",
		"clean-cache": "find . | grep -E \"(/__pycache__$|\\.pyc$|\\.pyo$)\" | xargs rm -rf && rm -r .mypy_cache .pytest_cache",
		"docker-dependencies-stop": "docker compose -f ./compose/deploy.dependencies.yaml down",
		"docker-dependencies-start": "docker compose -f ./compose/deploy.dependencies.yaml up",
		"docker-image-build": "cp -f ./env/production.env .env && docker compose -f ./compose/image.build.yaml build",
		"docker-image-push": "docker push ghcr.io/joseesco24/sar_ms_py --all-tags",
		"docker-full-stop": "docker compose -f ./compose/deploy.full.yaml down",
		"docker-full-start": "cp -f ./env/docker.env .env && docker compose -f ./compose/deploy.full.yaml up",
		"format": "black ./src && printf \"\n\" && black ./test/unit_test && printf \"\n\" && prettier \"./test/load_test/k6/**/*.js\" --write && printf \"\n\" && prettier \"./**/*.{yaml,json,md,graphql}\" --write",
		"start-dev": "cp -f ./env/development.env .env && python src/sar_ms_py.py",
		"start-app": "cp -f ./env/production.env .env && python src/sar_ms_py.py",
		"commitmsg": "bash ./.husky/commit-msg.sh",
		"precommit": "bash ./.husky/pre-commit.sh",
		"postinstall": "npx husky install",
		"load-test": "bash ./test/load_test/k6/orchestator.sh",
		"unit-test": "pytest --verbose"
	},
	"prettier": {
		"trailingComma": "es5",
		"useTabs": true,
		"semi": false,
		"singleQuote": false,
		"proseWrap": "preserve",
		"quoteProps": "consistent",
		"bracketSpacing": false,
		"bracketSameLine": false,
		"arrowParens": "always",
		"insertPragma": false,
		"endOfLine": "lf",
		"printWidth": 180,
		"rangeStart": 0
	},
	"devDependencies": {
		"@commitlint/cli": "^19.2.1",
		"@commitlint/config-conventional": "^19.1.0",
		"husky": "^9.0.11",
		"prettier": "^3.2.5"
	}
}
